<p>
  Export maps to generate downloadable, printable, high-resolution files. <a onClick="$('#exporting-info').toggle();">Learn more &raquo;</a>
</p>
<div style="display:none;" id="exporting-info">
  <p>From this panel you can export this map in a variety of formats. If you've changed the map at all since last exporting, you can re-run the export, but be aware that this will <b>delete and replace previously exported files</b>, so download them first if you want them. All formats are generated sequentially, so if you're waiting for a JPG you will have to let all the other formats complete first.</p>
  <p>This may take some time - a large map could take as long as <b>an hour or more</b>. Closing this panel will not stop the export.</p>
</div>

<ul class="nav nav-tabs" role="tablist">
  <li class="active"><a href="#map-export-subtab" role="tab" data-toggle="tab">Export</a></li>
  <li><a href="#map-export-options-subtab" role="tab" data-toggle="tab"><i class="fa fa-cog"></i> Advanced options</a></li>
</ul>

<div class="tab-content">
  <div class="tab-pane active" id="map-export-subtab">

    <% if Rails.env.production? && !current_user %>
      <div id="recaptcha-container"></div><br />
      <div <% if @map.exporting? %>style="display:none;"<% end %> id="run_export">Prove that you're a person, then click EXPORT to begin: <br />
    <% end %>

    <div class="progress"<% unless @map.exporting? %> style="display:none;"<% end %>>
      <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
        <span class="" id="export_progress"><%= @map.export ? @map.export.status : "Loading..." %></span>
      </div>
    </div>
    <% if current_user || @map.anonymous? %>
      <p>
        <button id="begin-export" class="btn btn-lg btn-primary"<% if @map.export && @map.exporting? %> style="display:none;"<% end %>>Start export</button>
        <button <% unless @map.export && @map.exporting? %>style="display:none;"<% end %> id="cancel-export" class="btn btn-lg btn-default"><i class="fa fa-remove"></i> Cancel export</button>
      </p>
    <% else %>
      <p>You must be <a href="/login">logged in</a> to run exports, except on anonymous maps.</p>
    <% end %>
    <% if @map.export %><p style="color:#888;"> Last export run <%= time_ago_in_words @map.export.updated_at %> ago<% if @map.export.user %> by <%= @map.export.user.login %><%= @map.export.user.login %></a><% end %></p><% end %>
  </div>

  <div class="tab-pane" id="map-export-options-subtab">
    <p>Tweak your export resolution; too high a resolution may stall the export (if the resulting file is too big!), while too low a resolution causes lots of processing to resize the images.</p>

<%
# stuff for Sparklines graph; messy, could tuck into model
hist = @map.images_histogram
(0..100).each do |i|
 hist[i] = 0 if !hist[i]
end
hist = hist[0..100]
grouphist = @map.grouped_images_histogram((hist.length/15).to_i+1)

# this is used for the resolution slider
resolution = @map.average_cm_per_pixel.to_s[0..4]
%>

    <p>Graph coming soon.</p><!-- Sparklines graph will go here -->

    <p><b>Resolution:</b> <span id="resolution-label"><%= resolution %></span> cm/px</p>

    <p><input style="width:100%" id="export-resolution" data-slider-id='exResSlider' type="text" data-slider-min="1" data-slider-max="100" data-slider-step="1" data-slider-value="<%= resolution %>"/></p>

  </div>
</div>
<script>
var exporting, exportResolutionSlider
(function(){
  exportResolutionSlider = new Slider('#export-resolution',{
    min: 1,
    formatter: function(value) {
      return value + ' cm/px';
    }
  }).on('change',function() {
    $('#resolution-label').html(exportResolutionSlider.getValue())
  });

  updateExports = function() {
    $.ajax({
      url: '/maps/exports/<%= @map.id %>?authenticity_token=<%= form_authenticity_token %>'
    }).done(function(data) {
      $('.map-exports').html(data)
    })
  }

  // 'complete', 'failed', ''
  exportProgress = function() {
    $.ajax({
      url: '/export/progress/<%= @map.id %>?authenticity_token=<%= form_authenticity_token %>'
    }).done(function(data) {
      $('.progress').show()
      $('#export_progress').html(data)
      // change progress indicator appearance accordingly
      // -- maybe have a handler which assigns prog indicator state based on status?
    })
  }
  <% if @map.exporting? %>
    exporting = true
    setInterval(exportProgress,5000)
  <% end %>

  $('#cancel-export').click(function() {
    $.ajax({
      url: '/export/cancel/<%= @map.id %>?authenticity_token=<%= form_authenticity_token %>',
      beforeSend: function() {
        $('.progress-bar').addClass('progress-bar-warning')
        $('.progress-bar').removeClass('progress-bar-danger')
        $('.progress-bar').removeClass('progress-bar-success')
        $('#export_progress').html('cancelling...')
      }
    }).done(function(data){
      $('.progress-bar').removeClass('progress-bar-warning')
      $('.progress-bar').removeClass('active')
      $('.progress-bar').removeClass('progress-bar-striped')
      $('#begin-export').html('Re-run export')
      $('#begin-export').show()
      $('#cancel-export').hide()
      $('.progress').hide()
      updateExports()
    })
  })

  $('#begin-export').click(function() {
    $('.progress').show()
    $('.progress-bar').addClass('active')
    $('.progress-bar').addClass('progress-bar-striped')
    $('.progress-bar').removeClass('progress-bar-danger')
    $('.progress-bar').removeClass('progress-bar-success')
    if (exporting != true) {
      exporting = true
      setInterval(exportProgress,5000)
    }
    $('#begin-export').hide()
    $('#cancel-export').show()
    $('#export_progress').html("starting export")
    $('.map-exports').html('')
    $.ajax({
      url: '/maps/export/<%= @map.id %>?authenticity_token=<%= form_authenticity_token %>',
      method: 'POST',
      data: {
        <% if Rails.env.production? && !logged_in? %>
          recaptcha_response_field: Recaptcha.get_response(),
          recaptcha_challenge_field: Recaptcha.get_challenge(),
        <% end %>
        resolution: exportResolutionSlider.getValue()
      }
    }).done(function(data){
      $('.progress-bar').addClass('progress-bar-success')
      $('.progress-bar').removeClass('active')
      $('.progress-bar').removeClass('progress-bar-striped')
      $('#export_progress').html(data)
      $('#begin-export').show()
      $('#begin-export').html('Re-run export')
      $('#cancel-export').hide()
      updateExports()
    }).fail(function(data){
      console.log(data)
      $('.progress-bar').addClass('progress-bar-danger')
      $('.progress-bar').removeClass('active')
      $('.progress-bar').removeClass('progress-bar-striped')
      $('#export_progress').html('There was an error.')
      $('#begin-export').show()
      $('#begin-export').html('Retry export')
      $('#cancel-export').hide()
    })
  })
})()
</script>
